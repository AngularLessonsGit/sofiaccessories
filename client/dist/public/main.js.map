{"version":3,"sources":["./src/app/components/add/add.component.ts","./src/app/components/add/add.component.html","./src/app/reducers/auth/auth.reducer.ts","./src/app/reducers/snackbar/snackbar.selectors.ts","./src/app/components/items/item/item.component.ts","./src/app/components/items/item/item.component.html","./src/app/services/error.service.ts","./src/environments/environment.ts","./src/app/services/local-storage.service.ts","./src/app/components/profile/profile.component.ts","./src/app/components/profile/profile.component.html","./src/app/components/items/items.component.ts","./src/app/components/items/items.component.html","./src/app/reducers/index.ts","./src/app/reducers/items/items.reducer.ts","./src/app/services/auth-guard.service.ts","./src/app/reducers/auth/auth.actions.ts","./src/app/components/contacts/contacts.component.ts","./src/app/components/contacts/contacts.component.html","./src/app/app.effects.ts","./src/app/reducers/snackbar/snackbar.reducer.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/order/order.component.ts","./src/app/components/order/order.component.html","./src/app/app.module.ts","./src/app/services/items.service.ts","./src/app/reducers/items/items.selectors.ts","./src/app/directives/ripple.directive.ts","./src/app/components/navigation/navigation.component.ts","./src/app/components/navigation/navigation.component.html","./src/app/reducers/items/items.actions.ts","./src/app/reducers/snackbar/snackbar.actions.ts","./src/app/services/user.service.ts","./src/app/components/auth/auth.component.ts","./src/app/components/auth/auth.component.html","./src/app/shared/constants.ts","./src/app/app-routing.module.ts","./src/main.ts","./src/app/reducers/auth/auth.selectors.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Store } from '@ngrx/store';\n\nimport { ItemState } from 'src/app/interfaces/item-state';\nimport { upload } from 'src/app/reducers/items/items.actions';\n\n@Component({\n  selector: 'app-add',\n  templateUrl: './add.component.html',\n  styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n  form = new FormGroup({\n    itemName: new FormControl('', [Validators.minLength(3), Validators.required]),\n    itemPrice: new FormControl('', [Validators.minLength(3), Validators.required]),\n    itemImage: new FormControl('', [Validators.required]),\n  });\n\n  item: File | null = null;\n\n  constructor(\n    private store$: Store<ItemState>,\n  ) { }\n\n  get itemName(): FormControl {\n    return this.form.get('itemName') as FormControl;\n  }\n\n  get itemPrice(): FormControl {\n    return this.form.get('itemPrice') as FormControl;\n  }\n\n  get itemImage(): FormControl {\n    return this.form.get('itemImage') as FormControl;\n  }\n\n  ngOnInit(): void {\n  }\n\n  handleFileInput(e: Event): void {\n    const fileInput: HTMLInputElement = e.target as HTMLInputElement;\n    this.item = Array.from(fileInput.files as FileList)[0];\n  }\n\n  submit(): void {\n    if (!this.form.valid || !this.item) {\n      return;\n    }\n\n    const formData: FormData = new FormData();\n    formData.append('image', this.item, this.item.name);\n    formData.append('name', this.itemName.value);\n    formData.append('price', this.itemPrice.value);\n    formData.append('createdDate', new Date().toLocaleDateString());\n\n    this.store$.dispatch(upload({ formData }));\n  }\n}\n","<h2 class=\"mb-2\">Додати товар</h2>\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\" (keydown.enter)=\"submit()\">\n  <div class=\"mb-3\">\n    <label class=\"form-label\">Назва</label>\n    <input type=\"text\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': itemName.invalid && (itemName.touched || itemName.dirty)}\" formControlName=\"itemName\">\n    <span *ngIf=\"itemName.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n    <span *ngIf=\"itemName.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n  </div>\n  <div class=\"mb-3\">\n    <label class=\"form-label\">Ціна</label>\n    <input type=\"text\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': itemPrice.invalid && (itemPrice.touched || itemPrice.dirty)}\" formControlName=\"itemPrice\">\n    <span *ngIf=\"itemPrice.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n    <span *ngIf=\"itemPrice.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n  </div>\n  <div class=\"mb-3\">\n    <label class=\"form-label\">Зображення</label>\n    <input type=\"file\" (change)=\"handleFileInput($event)\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': itemImage.invalid && (itemImage.touched || itemImage.dirty)}\" formControlName=\"itemImage\">\n    <span *ngIf=\"itemImage.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n  </div>\n  <div class=\"d-flex justify-content-end\">\n    <button type=\"submit\" class=\"btn-navi me-0\" appRipple>НАДІСЛАТИ</button>\n  </div>\n</form>","import { createReducer, on } from '@ngrx/store';\r\n\r\nimport * as authActionsType from './auth.actions';\r\nimport { AuthState } from '../../interfaces/auth-state';\r\n\r\nexport const authNode = 'auth';\r\n\r\nconst initialState: AuthState = {\r\n  _id: '',\r\n  login: '',\r\n  password: '',\r\n  mail: '',\r\n  isAdmin: false,\r\n  currentPage: null as any,\r\n};\r\n\r\nexport const authReducer = createReducer(\r\n  initialState,\r\n  on(authActionsType.updateUserState, (state, { _id, login, password, mail, isAdmin }) => ({\r\n    ...state,\r\n    _id,\r\n    login,\r\n    password,\r\n    mail: mail || '',\r\n    isAdmin: !!isAdmin,\r\n  })),\r\n  on(authActionsType.openLoginPage, state => ({\r\n    ...state,\r\n    currentPage: authActionsType.authPages.login\r\n  })),\r\n  on(authActionsType.openRegisterPage, state => ({\r\n    ...state,\r\n    currentPage: authActionsType.authPages.register\r\n  })),\r\n  on(authActionsType.openRemindPage, state => ({\r\n    ...state,\r\n    currentPage: authActionsType.authPages.remind\r\n  })),\r\n  on(authActionsType.exit, state => ({\r\n    ...state,\r\n    _id: '',\r\n    login: '',\r\n    password: '',\r\n    mail: '',\r\n    isAdmin: false,\r\n  })),\r\n);\r\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { SnackbarState } from 'src/app/interfaces/snackbar-state';\r\nimport { snackbarNode } from './snackbar.reducer';\r\n\r\nexport const selectAuthFeature = createFeatureSelector<SnackbarState>(snackbarNode);\r\n\r\nexport const selectSnackbarMsg = createSelector(\r\n  selectAuthFeature,\r\n  (state: SnackbarState): string => state.msg\r\n);\r\n\r\nexport const selectSnackbarIsError = createSelector(\r\n    selectAuthFeature,\r\n    (state: SnackbarState): boolean => state.isError\r\n);\r\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Item } from 'src/app/interfaces/item';\nimport { ItemState } from 'src/app/interfaces/item-state';\n\n@Component({\n  selector: 'app-item',\n  templateUrl: './item.component.html',\n  styleUrls: ['./item.component.scss']\n})\nexport class ItemComponent implements OnInit {\n\n  @Input() item: ItemState = {} as ItemState;\n  source = '../../../assets/';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.source += this.item.image;\n  }\n\n}\n","<div class=\"card\" style=\"width: 18rem;\">\n    <img [src]=\"source\" class=\"card-img-top\">\n    <div class=\"card-body\">\n        <h5 class=\"card-date\">{{item.createdDate}}</h5>\n        <h3 class=\"card-title\">{{item.name}}</h3>\n        <p class=\"card-text text-end\">{{item.price}} грн.</p>\n    </div>\n</div>","import { Injectable } from '@angular/core';\r\nimport { HttpErrorResponse } from '@angular/common/http';\r\nimport { throwError } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ErrorService {\r\n  constructor() {\r\n  }\r\n\r\n  handleError(error: HttpErrorResponse): any {\r\n    if (error.error instanceof ErrorEvent) {\r\n      // A client-side or network error occurred. Handle it accordingly.\r\n      console.error('An error occurred:', error.error.message);\r\n    } else {\r\n      // The backend returned an unsuccessful response code.\r\n      // The response body may contain clues as to what went wrong.\r\n      console.error(\r\n        `Backend returned code ${error.status}, ` +\r\n        `body was: ${error.error}`);\r\n    }\r\n    // Return an observable with a user-facing error message.\r\n    return throwError(\r\n      'Something bad happened; please try again later.');\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\nimport * as CryptoTs from 'crypto-ts';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor() { }\n\n  getItem(key: string): string {\n    if (!key || !localStorage.getItem(key)) {\n      return '';\n    }\n    return CryptoTs.AES.decrypt(localStorage.getItem(key) as string, 'iamsofi').toString(CryptoTs.enc.Utf8);\n  }\n\n  setItem(key: string, value: string): void {\n    if (!key || !value) {\n      return;\n    }\n    localStorage.setItem(key, CryptoTs.AES.encrypt(value, 'iamsofi').toString());\n  }\n\n  removeItem(key: string): void {\n    if (!key) {\n      return;\n    }\n    localStorage.removeItem(key);\n  }\n\n  clear(): void {\n    localStorage.clear();\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\n\nimport { AuthState } from 'src/app/interfaces/auth-state';\nimport { exit, updateUser } from 'src/app/reducers/auth/auth.actions';\nimport { selectAuthFeature } from 'src/app/reducers/auth/auth.selectors';\nimport { showSnackbar } from 'src/app/reducers/snackbar/snackbar.actions';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  form = new FormGroup({});\n\n  constructor(\n    private store$: Store<AuthState>,\n  ) { }\n\n  get login(): FormControl {\n    return this.form.get('login') as FormControl;\n  }\n\n  get password(): FormControl {\n    return this.form.get('password') as FormControl;\n  }\n\n  get confirmPassword(): FormControl {\n    return this.form.get('confirmPassword') as FormControl;\n  }\n\n  get mail(): FormControl {\n    return this.form.get('mail') as FormControl;\n  }\n\n  ngOnInit(): void {\n    this.store$.pipe(select(selectAuthFeature))\n    .subscribe(state => {\n      this.form = new FormGroup({\n        _id: new FormControl(state._id, [Validators.minLength(3), Validators.required]),\n        login: new FormControl(state.login, [Validators.minLength(3), Validators.required]),\n        password: new FormControl(state.password, [Validators.minLength(3), Validators.required]),\n        confirmPassword: new FormControl('', [Validators.minLength(3), Validators.required]),\n        mail: new FormControl(state.mail, [Validators.minLength(3), Validators.email, Validators.required])\n      });\n    });\n  }\n\n  submit(): void {\n    if (!this.form.valid) {\n      this.confirmPassword.markAsDirty();\n      return;\n    }\n\n    if (this.password?.value !== this.confirmPassword?.value) {\n      this.store$.dispatch(showSnackbar({msg: `Паролі не співпадають`, isError: true}));\n    } else {\n      this.store$.dispatch(updateUser(this.form.value));\n    }\n  }\n\n  exit(): void {\n    this.store$.dispatch(exit());\n  }\n\n}\n","<h2 class=\"mb-2\">Мій профіль </h2>\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\" (keydown.enter)=\"submit()\" class=\"authorization\">\n    <div *ngIf=\"login\" class=\"mb-3\">\n        <label class=\"form-label\">Ім'я</label>\n        <input type=\"text\" class=\"form-control w-50\"\n            [ngClass]=\"{'is-invalid': login.invalid && (login.touched || login.dirty)}\" formControlName=\"login\">\n        <span *ngIf=\"login.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n        <span *ngIf=\"login.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n    </div>\n    <div *ngIf=\"password\" class=\"mb-3\">\n        <label class=\"form-label\">Пароль</label>\n        <input type=\"password\" class=\"form-control w-50\"\n            [ngClass]=\"{'is-invalid': password.invalid && (password.touched || password.dirty)}\"\n            formControlName=\"password\">\n        <span *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n        <span *ngIf=\"password.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n    </div>\n    <div *ngIf=\"confirmPassword\" class=\"mb-3\">\n        <label class=\"form-label\">Підтвердження паролю</label>\n        <input type=\"password\" class=\"form-control w-50\"\n            [ngClass]=\"{'is-invalid': confirmPassword.invalid && (confirmPassword.touched || confirmPassword.dirty)}\"\n            formControlName=\"confirmPassword\">\n        <span *ngIf=\"confirmPassword.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n        <span *ngIf=\"confirmPassword.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n    </div>\n    <div *ngIf=\"mail\" class=\"mb-3\">\n        <label class=\"form-label\">E-mail</label>\n        <input type=\"text\" class=\"form-control w-50\"\n            [ngClass]=\"{'is-invalid': mail.invalid && (mail.touched || mail.dirty)}\" formControlName=\"mail\">\n        <span *ngIf=\"mail.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n        <span *ngIf=\"mail.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n        <span *ngIf=\"mail.errors?.email\" class=\"invalid-feedback\">Неправильна поштова адреса</span>\n    </div>\n    <div class=\"d-flex justify-content-end\">\n        <button type=\"submit\" class=\"btn-navi ml-auto\" appRipple>ЗМІНИТИ</button>\n        <button type=\"button\" class=\"btn-navi me-0\" routerLinkActive=\"btn-navi-active\" (click)=\"exit()\" appRipple>ВИЙТИ</button>\n    </div>\n</form>","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { select, Store } from '@ngrx/store';\r\n\r\nimport { ItemsListState } from 'src/app/interfaces/items-list-state';\r\nimport { selectItems } from 'src/app/reducers/items/items.selectors';\r\nimport { getItems } from 'src/app/reducers/items/items.actions';\r\nimport { ItemState } from 'src/app/interfaces/item-state';\r\n\r\n@Component({\r\n  selector: 'app-items',\r\n  templateUrl: './items.component.html',\r\n  styleUrls: ['./items.component.scss']\r\n})\r\nexport class ItemsComponent implements OnInit {\r\n  public list$: Observable<ItemState[]> = this.store$.pipe(select(selectItems));\r\n\r\n  constructor(\r\n    private store$: Store<ItemsListState>,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.store$.dispatch(getItems());\r\n  }\r\n}\r\n","<div class=\"d-flex flex-wrap items\">\r\n    <ng-container *ngIf=\"list$ | async\">\r\n        <app-item *ngFor=\"let item of (list$ | async)\" [item]=\"item\"></app-item>\r\n    </ng-container>\r\n</div>","import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\n\nimport { environment } from '../../environments/environment';\nimport { AuthState } from '../interfaces/auth-state';\nimport { ItemsListState } from '../interfaces/items-list-state';\nimport { SnackbarState } from '../interfaces/snackbar-state';\nimport { authNode, authReducer } from './auth/auth.reducer';\nimport { itemsNode, itemReducer } from './items/items.reducer';\nimport { snackbarNode, snackbarReducer } from './snackbar/snackbar.reducer';\n\n\nexport interface State {\n  [authNode]: AuthState;\n  [snackbarNode]: SnackbarState;\n  [itemsNode]: ItemsListState;\n}\n\nexport const reducers: ActionReducerMap<State> = {\n  [authNode]: authReducer,\n  [snackbarNode]: snackbarReducer,\n  [itemsNode]: itemReducer,\n};\n\nexport const metaReducers: MetaReducer<State>[] = !environment.production ? [] : [];\n","import { createReducer, on } from '@ngrx/store';\r\n\r\nimport { ItemsListState } from 'src/app/interfaces/items-list-state';\r\nimport * as itemsActionsType from './items.actions';\r\n\r\nexport const itemsNode = 'items';\r\n\r\nconst initialState: ItemsListState = {\r\n    items: [],\r\n};\r\n\r\nexport const itemReducer = createReducer(\r\n    initialState,\r\n    on(itemsActionsType.getItemsSuccess, (state, { items }) => ({\r\n        ...state,\r\n        items\r\n    })),\r\n);\r\n","import { Injectable } from '@angular/core';\nimport { AuthState } from '../interfaces/auth-state';\nimport { select, Store } from '@ngrx/store';\nimport { selectIsAdmin } from '../reducers/auth/auth.selectors';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuardService {\n  constructor(public store$: Store<AuthState>) { }\n\n  canActivate(): Observable<boolean> {\n    return this.store$.pipe(select(selectIsAdmin));\n  }\n}\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport enum authPages {\r\n  login = 'login',\r\n  remind = 'remind',\r\n  register = 'register',\r\n}\r\n\r\nexport const login = createAction(\r\n  '[AUTH] log in',\r\n  props<{ login: string; password: string; }>()\r\n);\r\n\r\nexport const updateUserState = createAction(\r\n  '[AUTH] update user state',\r\n  props<{ _id: string; login: string; password: string; mail?: string; isAdmin?: boolean; }>()\r\n);\r\n\r\nexport const register = createAction(\r\n  '[AUTH] register',\r\n  props<{ login: string; password: string; confirmPassword: string; mail: string; }>()\r\n);\r\n\r\nexport const remind = createAction(\r\n  '[AUTH] remind',\r\n  props<{ mail: string; }>()\r\n);\r\n\r\nexport const updateUser = createAction(\r\n  '[AUTH] update user',\r\n  props<{ _id: string; login: string; password: string; mail: string; }>()\r\n);\r\n\r\nexport const exit = createAction(\r\n  '[AUTH] exit',\r\n);\r\n\r\nexport const openLoginPage = createAction(\r\n  '[AUTH] open login page',\r\n);\r\n\r\nexport const openRegisterPage = createAction(\r\n  '[AUTH] open register page',\r\n);\r\n\r\nexport const openRemindPage = createAction(\r\n  '[AUTH] open remind page',\r\n);\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contacts',\n  templateUrl: './contacts.component.html',\n  styleUrls: ['./contacts.component.scss']\n})\nexport class ContactsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  contacts works!\n</p>\n","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { of } from 'rxjs';\nimport { catchError, delay, filter, map, switchMap } from 'rxjs/operators';\n\nimport { ItemState } from './interfaces/item-state';\nimport { ItemsListState } from './interfaces/items-list-state';\nimport { LoginState } from './interfaces/login-state';\nimport { RegState } from './interfaces/reg-state';\nimport { User } from './interfaces/user';\nimport { exit, login, updateUserState, openLoginPage, register, remind, updateUser } from './reducers/auth/auth.actions';\nimport { getItems, getItemsSuccess, upload } from './reducers/items/items.actions';\nimport { hideSnackbar, showSnackbar } from './reducers/snackbar/snackbar.actions';\nimport { ErrorService } from './services/error.service';\nimport { ItemsService } from './services/items.service';\nimport { LocalStorageService } from './services/local-storage.service';\nimport { UserService } from './services/user.service';\n\n@Injectable()\nexport class AppEffects {\n  isClosed = true;\n  constructor(\n    private actions$: Actions,\n    private userService: UserService,\n    private itemsService: ItemsService,\n    private errorService: ErrorService,\n    private router: Router,\n    private localStorageService: LocalStorageService,\n  ) { }\n\n  showSnackbar$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(showSnackbar),\n      delay(3990),\n      map(() => hideSnackbar()),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  login$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(login),\n      switchMap((action: LoginState) => this.userService.fetchUser(action)),\n      switchMap(res => {\n        if (res.message) {\n          return [showSnackbar({ msg: res.message, isError: true })];\n        } else {\n          this.router.navigate(['/']);\n          this.localStorageService.setItem('ad_23', JSON.stringify(res.user));\n          return [\n            showSnackbar({ msg: `Вітаємо ${res.user?.login} на нашому сайті!` }),\n            updateUserState(res.user as User),\n          ];\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  remind$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(remind),\n      filter(() => this.isClosed),\n      switchMap(({ mail }) => this.userService.remind(mail)),\n      switchMap(res => {\n        if (!res.success) {\n          return [showSnackbar({ msg: res.message as string, isError: true })];\n        } else {\n          return [\n            showSnackbar({ msg: res.message as string }),\n            openLoginPage(),\n          ];\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  register$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(register),\n      switchMap((action: RegState) => this.userService.register(action)),\n      switchMap(res => {\n        if (!res.success) {\n          return [showSnackbar({ msg: res.message as string, isError: true })];\n        } else {\n          return [\n            showSnackbar({ msg: res.message as string }),\n            openLoginPage(),\n          ];\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  updateUser$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(updateUser),\n      switchMap((action: User) => this.userService.update(action)),\n      switchMap(res => {\n        if (!res.success) {\n          return [showSnackbar({ msg: res.message as string, isError: true })];\n        } else {\n          console.log(JSON.stringify(res.user));\n          this.localStorageService.setItem('ad_23', JSON.stringify(res.user));\n          this.router.navigate(['/']);\n          return [\n            showSnackbar({ msg: res.message as string }),\n            updateUserState(res.user as User),\n          ];\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  exit$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(exit),\n      map(() => {\n        this.router.navigate(['/']);\n        this.localStorageService.clear();\n        return showSnackbar({ msg: `Ви успішно розлогувались!` });\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  upload$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(upload),\n      switchMap(({ formData }) => this.itemsService.upload(formData)),\n      map(res => {\n        if (!res.success) {\n          return showSnackbar({ msg: res.message as string, isError: true });\n        } else {\n          this.router.navigate(['/']);\n          return showSnackbar({ msg: res.message as string });\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n\n  getItems$ = createEffect((): any => {\n    return this.actions$.pipe(\n      ofType(getItems),\n      switchMap(() => this.itemsService.getItems()),\n      map(res => {\n        if (!res.success) {\n          return showSnackbar({ msg: res.message as string, isError: true });\n        } else {\n          return getItemsSuccess({ items: res.items as ItemState[] } as ItemsListState);\n        }\n      }),\n      catchError(err => of(this.errorService.handleError(err)))\n    );\n  });\n}\n","import { createReducer, on } from '@ngrx/store';\r\n\r\nimport * as snackbarActionsType from './snackbar.actions';\r\nimport { SnackbarState } from 'src/app/interfaces/snackbar-state';\r\n\r\nexport const snackbarNode = 'snackbar';\r\n\r\nconst initialState: SnackbarState = {\r\n    msg: '',\r\n    isError: false,\r\n};\r\n\r\nexport const snackbarReducer = createReducer(\r\n    initialState,\r\n    on(snackbarActionsType.showSnackbar, (state, { msg, isError }) => ({\r\n        ...state,\r\n        msg,\r\n        isError: !!isError,\r\n    })),\r\n    on(snackbarActionsType.hideSnackbar, state => ({\r\n        ...state,\r\n        msg: '',\r\n        isError: false,\r\n    })),\r\n);\r\n","import { Component } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\nimport { SnackbarState } from './interfaces/snackbar-state';\nimport { selectSnackbarIsError, selectSnackbarMsg } from './reducers/snackbar/snackbar.selectors';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  public msg$: Observable<string> = this.store$.pipe(select(selectSnackbarMsg));\n  public isError$: Observable<boolean> = this.store$.pipe(select(selectSnackbarIsError));\n\n  constructor(\n    private store$: Store<SnackbarState>,\n  ) { }\n}\n","<div class=\"container\">\n  <img src=\"../../../assets/logo.webp\" class=\"logo\" alt=\"\">\n  <app-navigation></app-navigation>\n  <router-outlet></router-outlet>\n  <div class=\"snackbar\" [ngClass]=\"{'msg-error': (isError$ | async), 'show': (msg$ | async)}\">{{msg$ | async}}</div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.scss']\n})\nexport class OrderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<p>\n  order works!\n</p>\n","import { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { StoreModule } from '@ngrx/store';\nimport { EffectsModule } from '@ngrx/effects';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { StoreRouterConnectingModule } from '@ngrx/router-store';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { ItemComponent } from './components/items/item/item.component';\nimport { ItemsComponent } from './components/items/items.component';\nimport { NavigationComponent } from './components/navigation/navigation.component';\nimport { OrderComponent } from './components/order/order.component';\nimport { reducers, metaReducers } from './reducers';\nimport { environment } from '../environments/environment';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { AppEffects } from './app.effects';\nimport { RippleDirective } from './directives/ripple.directive';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AddComponent } from './components/add/add.component';\n\n@NgModule({\n  declarations: [\n    RippleDirective,\n    AppComponent,\n    NavigationComponent,\n    ItemsComponent,\n    ItemComponent,\n    OrderComponent,\n    ContactsComponent,\n    AuthComponent,\n    ProfileComponent,\n    AddComponent,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    StoreModule.forRoot(reducers, {\n      metaReducers,\n      runtimeChecks: {\n        strictStateImmutability: true,\n        strictActionImmutability: true,\n      }\n    }),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([AppEffects]),\n    StoreRouterConnectingModule.forRoot(),\n    NgbModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of } from 'rxjs';\n\nimport { ItemResponse } from '../interfaces/item-response';\nimport { items } from '../shared/constants';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ItemsService {\n  // baseUrl = 'http://localhost:8080';\n\n  constructor(private http: HttpClient) {\n  }\n\n  upload(item: FormData): Observable<ItemResponse> {\n    // return this.http.post<ItemResponse>(`${this.baseUrl}/upload`, item);\n    return this.http.post<ItemResponse>(`/upload`, item);\n  }\n\n  getItems(): Observable<ItemResponse> {\n    return of({success: true, items: items});\n    // return this.http.post<ItemResponse>(`${this.baseUrl}/get-list`, {});\n    return this.http.post<ItemResponse>(`/get-list`, {});\n  }\n}\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { ItemState } from 'src/app/interfaces/item-state';\r\n\r\nimport { ItemsListState } from 'src/app/interfaces/items-list-state';\r\nimport { itemsNode } from './items.reducer';\r\n\r\nexport const selectItemsFeature = createFeatureSelector<ItemsListState>(itemsNode);\r\n\r\nexport const selectItems = createSelector(\r\n    selectItemsFeature,\r\n    (state: ItemsListState): ItemState[] => state.items,\r\n  );\r\n","import { Directive, ElementRef, HostListener, Renderer2 } from '@angular/core';\n\n@Directive({\n  selector: '[appRipple]'\n})\nexport class RippleDirective {\n  constructor(private el: ElementRef, public renderer: Renderer2){}\n  @HostListener('click', ['$event']) onClick(e: any): void {\n    const x = e.clientX - e.target.offsetLeft;\n    const y = e.clientY - e.target.offsetTop;\n\n    const ripples = document.createElement('span');\n    ripples.style.left = x + 'px';\n    ripples.style.top = y + 'px';\n\n    this.renderer.appendChild(this.el.nativeElement, ripples);\n    setTimeout(() => {\n      ripples.remove();\n    }, 1000);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { select, Store } from '@ngrx/store';\nimport { Observable } from 'rxjs';\n\nimport { AuthState } from 'src/app/interfaces/auth-state';\nimport { User } from 'src/app/interfaces/user';\nimport { updateUserState } from 'src/app/reducers/auth/auth.actions';\nimport { selectIsAdmin, selectLogin } from 'src/app/reducers/auth/auth.selectors';\nimport { LocalStorageService } from 'src/app/services/local-storage.service';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent implements OnInit {\n\n  public isAdmin$: Observable<boolean> = this.store$.pipe(select(selectIsAdmin));\n  public login$: Observable<string> = this.store$.pipe(select(selectLogin));\n\n  constructor(\n    private store$: Store<AuthState>,\n    private localStorageService: LocalStorageService,\n  ) { }\n\n  ngOnInit(): void {\n    const user = this.localStorageService.getItem('ad_23');\n    if (user) {\n      this.store$.dispatch(updateUserState(JSON.parse(user) as User));\n    }\n  }\n}\n","<div class=\"d-flex flex-wrap mb-4 navigation\">\n  <button type=\"button\" class=\"btn-navi\" routerLinkActive=\"btn-navi-active\" [routerLink]=\"['']\" [routerLinkActiveOptions]=\"{ exact: true }\" appRipple>АКСЕСУАРИ</button>\n  <button type=\"button\" class=\"btn-navi\" routerLinkActive=\"btn-navi-active\" [routerLink]=\"['order']\" appRipple>ЗАМОВИТИ</button>\n  <button type=\"button\" class=\"btn-navi me-auto\" [ngClass]=\"{'me-auto': !(isAdmin$ | async)}\" routerLinkActive=\"btn-navi-active\" [routerLink]=\"['contacts']\" appRipple>КОНТАКТИ</button>\n  <button *ngIf=\"isAdmin$ | async\" type=\"button\" class=\"btn-navi me-auto\" routerLinkActive=\"btn-navi-active\" [routerLink]=\"['add']\" appRipple>ДОДАТИ</button>\n  <div class=\"d-flex input-group w-auto position-static\">\n    <input type=\"search\" class=\"form-control input-navi-search\" placeholder=\"Шукаємо...\" aria-label=\"Пошук\"/>\n    <button class=\"btn-navi\" appRipple>ПОШУК</button>\n  </div>\n  <button type=\"button\" class=\"btn-navi text-uppercase me-0\" routerLinkActive=\"btn-navi-active\" [routerLink]=\"(login$ | async) ? ['/profile'] : ['auth']\" appRipple>{{(login$ | async) || 'ВХІД'}}</button>\n</div>\n","import { createAction, props } from '@ngrx/store';\r\n\r\nimport { ItemState } from 'src/app/interfaces/item-state';\r\n\r\nexport const upload = createAction(\r\n    '[ITEMS] upload item',\r\n    props<{ formData: FormData; }>()\r\n);\r\n\r\nexport const getItems = createAction(\r\n    '[ITEMS] get items',\r\n);\r\n\r\nexport const getItemsSuccess = createAction(\r\n    '[ITEMS] get items success',\r\n    props<{ items: ItemState[] }>()\r\n);\r\n","import { createAction, props } from '@ngrx/store';\r\n\r\nexport const showSnackbar = createAction(\r\n    '[SNACKBAR] show',\r\n    props<{ msg: string; isError?: boolean }>()\r\n);\r\n\r\nexport const hideSnackbar = createAction(\r\n    '[SNACKBAR] hide',\r\n);\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { Injectable } from '@angular/core';\r\n\r\nimport { UserResponse } from '../interfaces/user-response';\r\nimport { RegState } from '../interfaces/reg-state';\r\nimport { LoginState } from '../interfaces/login-state';\r\nimport { User } from '../interfaces/user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n  // baseUrl = 'http://localhost:8080';\r\n\r\n  constructor(private http: HttpClient) {\r\n  }\r\n\r\n  fetchUser({ login, password }: LoginState): Observable<UserResponse> {\r\n    // return this.http.post<UserResponse>(`${this.baseUrl}/user`, { login, password });\r\n    return this.http.post<UserResponse>(`/user`, { login, password });\r\n  }\r\n\r\n  register({ login, password, confirmPassword, mail }: RegState): Observable<UserResponse> {\r\n    // return this.http.post<UserResponse>(`${this.baseUrl}/register`, { login, password, mail });\r\n    return this.http.post<UserResponse>(`/register`, { login, password, confirmPassword, mail });\r\n  }\r\n\r\n  remind(mail: string): Observable<UserResponse> {\r\n    // return this.http.post<UserResponse>(`${this.baseUrl}/remind`, { mail });\r\n    return this.http.post<UserResponse>(`/remind`, { mail });\r\n  }\r\n\r\n  update({ _id, login, password, mail }: User): Observable<UserResponse> {\r\n    // return this.http.post<UserResponse>(`${this.baseUrl}/update-user`, { _id, login, password, mail });\r\n    return this.http.post<UserResponse>(`/remind`, { _id, login, password, mail });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { select, Store } from '@ngrx/store';\n\nimport { AuthState } from 'src/app/interfaces/auth-state';\nimport { Tab } from 'src/app/interfaces/tab';\nimport { login, register, remind } from 'src/app/reducers/auth/auth.actions';\nimport { selectCurrentPage } from 'src/app/reducers/auth/auth.selectors';\nimport { showSnackbar } from 'src/app/reducers/snackbar/snackbar.actions';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.scss']\n})\nexport class AuthComponent implements OnInit {\n  form: FormGroup = new FormGroup({});\n\n  loginTabs = {\n    login: {\n      id: 1,\n      name: 'Введіть дані для авторизації',\n      button: 'Авторизуватись'\n    },\n    register: {\n      id: 2,\n      name: 'Реєстрація нового користувача',\n      button: 'Зареєструватись'\n    },\n    remind: {\n      id: 3,\n      name: 'Забули пароль',\n      button: 'Нагадати пароль'\n    }\n  };\n\n  currentTab = {\n    tab: this.loginTabs.login\n  };\n\n  constructor(\n    private store$: Store<AuthState>,\n  ){}\n\n  get login(): FormControl {\n    return this.form.get('login') as FormControl;\n  }\n\n  get password(): FormControl {\n    return this.form.get('password') as FormControl;\n  }\n\n  get confirmPassword(): FormControl {\n    return this.form.get('confirmPassword') as FormControl;\n  }\n\n  get mail(): FormControl {\n    return this.form.get('mail') as FormControl;\n  }\n\n  ngOnInit(): void {\n    this.open(this.loginTabs.login);\n    this.store$.pipe(select(selectCurrentPage))\n      .subscribe((page) => this.open(this.loginTabs[page]));\n  }\n\n  isActive(tab: Tab): boolean {\n    if (!tab) {\n      return false;\n    }\n    return this.currentTab.tab === tab;\n  }\n\n  open(tab: Tab): void {\n    if (!tab) {\n      return;\n    }\n    this.currentTab.tab = tab;\n    this.form.reset();\n    this.form = new FormGroup({\n      login: new FormControl('', [Validators.minLength(3), Validators.required]),\n      password: new FormControl('', [Validators.minLength(3), Validators.required]),\n      confirmPassword: new FormControl('', [Validators.minLength(3), Validators.required]),\n      mail: new FormControl('', [Validators.minLength(3), Validators.email, Validators.required])\n    });\n\n    if (this.isActive(this.loginTabs.login)) {\n      this.form.removeControl('confirmPassword');\n      this.form.removeControl('mail');\n    }\n\n    if (this.isActive(this.loginTabs.remind)) {\n      this.form.removeControl('login');\n      this.form.removeControl('password');\n      this.form.removeControl('confirmPassword');\n    }\n  }\n\n  submit(): void {\n    if (!this.form.valid) {\n      return;\n    }\n\n    switch (this.currentTab.tab) {\n      case this.loginTabs.login:\n        return this.signIn();\n      case this.loginTabs.register:\n        return this.register();\n      case this.loginTabs.remind:\n        return this.remind();\n    }\n  }\n\n  signIn(): void {\n    this.store$.dispatch(login(this.form.value));\n  }\n\n  register(): void {\n    if (this.password?.value !== this.confirmPassword?.value) {\n      this.store$.dispatch(showSnackbar({msg: `Паролі не співпадають`, isError: true}));\n    } else {\n      this.store$.dispatch(register(this.form.value));\n    }\n  }\n\n  remind(): void {\n    this.store$.dispatch(remind(this.form.value));\n  }\n}\n","<h2 class=\"mb-2\">{{currentTab.tab.name}}</h2>\n<form [formGroup]=\"form\" (ngSubmit)=\"submit()\" (keydown.enter)=\"submit()\" class=\"authorization\">\n  <div *ngIf=\"login\" class=\"mb-3\">\n    <label class=\"form-label\">Ваше ім'я</label>\n    <input type=\"text\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': login.invalid && (login.touched || login.dirty)}\" formControlName=\"login\">\n    <span *ngIf=\"login.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n    <span *ngIf=\"login.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n  </div>\n  <div *ngIf=\"password\" class=\"mb-3\">\n    <label class=\"form-label\">Ваш пароль</label>\n    <input type=\"password\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': password.invalid && (password.touched || password.dirty)}\" formControlName=\"password\">\n    <span *ngIf=\"password.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n    <span *ngIf=\"password.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n  </div>\n  <div *ngIf=\"confirmPassword\" class=\"mb-3\">\n    <label class=\"form-label\">Підтвердження паролю</label>\n    <input type=\"password\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': confirmPassword.invalid && (confirmPassword.touched || confirmPassword.dirty)}\" formControlName=\"confirmPassword\">\n    <span *ngIf=\"confirmPassword.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n    <span *ngIf=\"confirmPassword.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n  </div>\n  <div *ngIf=\"mail\" class=\"mb-3\">\n    <label class=\"form-label\">Ваш e-mail</label>\n    <input type=\"text\" class=\"form-control w-50\" [ngClass]=\"{'is-invalid': mail.invalid && (mail.touched || mail.dirty)}\" formControlName=\"mail\">\n    <span *ngIf=\"mail.errors?.required\" class=\"invalid-feedback\">Пусте поле</span>\n    <span *ngIf=\"mail.errors?.minlength\" class=\"invalid-feedback\">Мінімум 3 символи</span>\n    <span *ngIf=\"mail.errors?.email\" class=\"invalid-feedback\">Неправильна поштова адреса</span>\n  </div>\n  <div class=\"d-flex justify-content-between align-items-center\">\n    <h5 class=\"user-select-none\">\n      <span *ngIf=\"!isActive(loginTabs.login)\" class=\"auth-link\"\n        (click)=\"open(this.loginTabs.login)\">{{loginTabs.login.button}}</span>\n      <span *ngIf=\"!isActive(loginTabs.login)\"> / </span>\n      <span *ngIf=\"!isActive(loginTabs.register)\" class=\"auth-link\"\n        (click)=\"open(this.loginTabs.register)\">{{loginTabs.register.button}}</span>\n      <span *ngIf=\"!isActive(loginTabs.register) && !isActive(loginTabs.remind)\"> / </span>\n      <span *ngIf=\"!isActive(loginTabs.remind)\" class=\"auth-link\"\n        (click)=\"open(this.loginTabs.remind)\">{{loginTabs.remind.button}}</span>\n    </h5>\n    <div>\n      <button type=\"submit\" class=\"btn-navi me-0 text-uppercase\" appRipple>{{currentTab.tab.button}}</button>\n    </div>\n  </div>\n</form>","export const items = [\r\n    {\r\n        _id: '1',\r\n        name: 'Обруч',\r\n        image: '1.webp',\r\n        price: '100.00 грн.',\r\n        createdDate: '23/04/2021',\r\n    },\r\n    {\r\n        _id: '2',\r\n        name: 'Заколки',\r\n        image: '2.webp',\r\n        price: '120.00 грн.',\r\n        createdDate: '26/04/2021',\r\n    },\r\n    {\r\n        _id: '3',\r\n        name: 'Дитячі аксесуари',\r\n        image: '3.webp',\r\n        price: '150.00 грн.',\r\n        createdDate: '29/04/2021',\r\n    },\r\n]","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddComponent } from './components/add/add.component';\nimport { AuthComponent } from './components/auth/auth.component';\nimport { ContactsComponent } from './components/contacts/contacts.component';\nimport { ItemsComponent } from './components/items/items.component';\nimport { OrderComponent } from './components/order/order.component';\nimport { ProfileComponent } from './components/profile/profile.component';\nimport { AuthGuardService } from './services/auth-guard.service';\n\nconst routes: Routes = [\n  { path: '', component: ItemsComponent },\n  { path: 'order', component: OrderComponent },\n  { path: 'contacts', component: ContactsComponent },\n  { path: 'auth', component: AuthComponent },\n  { path: 'profile', component: ProfileComponent },\n  { path: 'add', component: AddComponent, canActivate: [AuthGuardService] },\n  { path: '**', redirectTo: '/' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { authNode } from './auth.reducer';\r\nimport { AuthState } from '../../interfaces/auth-state';\r\nimport { authPages } from './auth.actions';\r\n\r\nexport const selectAuthFeature = createFeatureSelector<AuthState>(authNode);\r\n\r\nexport const selectLogin = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): string => state.login\r\n);\r\n\r\nexport const selectPassword = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): string => state.password\r\n);\r\n\r\nexport const selectIsAdmin = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): boolean => state.isAdmin\r\n);\r\n\r\nexport const selectCurrentPage = createSelector(\r\n  selectAuthFeature,\r\n  (state: AuthState): authPages => state.currentPage\r\n);\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}